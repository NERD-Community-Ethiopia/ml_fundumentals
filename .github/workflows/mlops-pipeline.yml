name: MLOps Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        black --check src/
        flake8 src/
        isort --check-only src/

  train:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create sample data
      run: |
        mkdir -p data/raw
        # Create sample breast cancer data for testing
        python -c "
        import pandas as pd
        import numpy as np
        np.random.seed(42)
        n_samples = 100
        data = pd.DataFrame({
            'ID': range(1, n_samples + 1),
            'Diagnosis': np.random.choice(['B', 'M'], n_samples),
            **{f'Feature_{i}': np.random.normal(0, 1, n_samples) for i in range(1, 31)}
        })
        data.to_csv('data/raw/data.csv', index=False)
        print('Sample data created')
        "
    
    - name: Run training pipeline
      run: |
        python src/main.py
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v3
      with:
        name: model-artifacts
        path: |
          models/checkpoints/
          models/feature_info.yaml
          logs/

  deploy:
    runs-on: ubuntu-latest
    needs: train
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Download model artifacts
      uses: actions/download-artifact@v3
      with:
        name: model-artifacts
        path: models/
    
    - name: Deploy to staging
      run: |
        echo "Deploying model to staging environment"
        # Add your deployment logic here
        # Example: Copy model to staging server, update API endpoints, etc.
    
    - name: Run deployment tests
      run: |
        echo "Running deployment tests"
        # Add your deployment validation tests here 